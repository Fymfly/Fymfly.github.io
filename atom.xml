<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <subtitle>你好，兄dei</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-24T11:46:08.498Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Fymfly</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MySQL面试题</title>
    <link href="http://yoursite.com/2018/12/24/MySQL%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2018/12/24/MySQL面试题/</id>
    <published>2018-12-24T07:53:35.000Z</published>
    <updated>2018-12-24T11:46:08.498Z</updated>
    
    <content type="html"><![CDATA[<p><strong> MySQL面试题：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><h1 id="1、MySQL设计表的三范式"><a href="#1、MySQL设计表的三范式" class="headerlink" title="1、MySQL设计表的三范式"></a>1、MySQL设计表的三范式</h1><p><em>1NF：字段不可分</em><br><em>2NF：有主键，非主键字段依赖主键</em><br><em>3NF：非主键字段不能相互依赖</em></p><h4 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h4><p><em>1NF：原子性，字段不可分，否则就不是关系型数据库</em><br><em>2NF：唯一性，一个表只说明一个事务</em><br><em>3FN：每列都与主键有直接关系，不存在传递依赖</em></p><h1 id="2、InnoDB和MyISAM的区别"><a href="#2、InnoDB和MyISAM的区别" class="headerlink" title="2、InnoDB和MyISAM的区别"></a>2、InnoDB和MyISAM的区别</h1><h4 id="InnoDB-是MySQL官方默认的引擎，特点："><a href="#InnoDB-是MySQL官方默认的引擎，特点：" class="headerlink" title="InnoDB 是MySQL官方默认的引擎，特点："></a>InnoDB 是MySQL官方默认的引擎，特点：</h4><p><em>1、支持事务</em><br><em>2、支持外键约束</em><br><em>3、行级锁（在并发修改数据时效率更高）</em><br><em>4、可以从灾难中恢复（更加安全）</em><br><em>5、新版的InNoDB性能也非常好</em><br><em>6、每个表会在硬盘上生成两个文件：.frm文件（保存表结构），.ibd（保存数据）</em></p><h4 id="MyISAM-引擎是MySQL最早支持的一种引擎，它的特点是："><a href="#MyISAM-引擎是MySQL最早支持的一种引擎，它的特点是：" class="headerlink" title="MyISAM 引擎是MySQL最早支持的一种引擎，它的特点是："></a>MyISAM 引擎是MySQL最早支持的一种引擎，它的特点是：</h4><p><em>1、读，写速度非常快</em><br><em>2、表级锁</em><br><em>3、不支持事务</em><br><em>4、不支持外键约束</em><br><em>5、无法自动从在灾难中恢复</em><br><em>6、每个表会在硬盘上生成三个文件：.frm文件（保存表结构），.MYI（保存索引），.MYD（保存数据）</em></p><h1 id="3、常见的关系型数据库管理系统产品？"><a href="#3、常见的关系型数据库管理系统产品？" class="headerlink" title="3、常见的关系型数据库管理系统产品？"></a>3、常见的关系型数据库管理系统产品？</h1><p><em>Oracle，SQL Server，MySQL，Sybase，DB2，Access等</em></p><h1 id="SQL语言包括哪几部分？每部分都有哪些操作关键字？"><a href="#SQL语言包括哪几部分？每部分都有哪些操作关键字？" class="headerlink" title="SQL语言包括哪几部分？每部分都有哪些操作关键字？"></a>SQL语言包括哪几部分？每部分都有哪些操作关键字？</h1><h6 id="部分："><a href="#部分：" class="headerlink" title="部分："></a>部分：</h6><li>数据定义（DDL）</li><br><li>数据操纵（DML）</li><br><li>数据控制（DCL）</li><br><li>数据查询（DQL）</li><h6 id="关键字："><a href="#关键字：" class="headerlink" title="关键字："></a>关键字：</h6><li>数据定义：Create Table，Alter Table，Drop Table，Create/Drop Index</li><br><li>数据操纵：Select，insert，update，delete</li><br><li>数据控制：grant，revoke</li><br><li>数据查询：select</li><h1 id="4、完整性约束包括哪些？"><a href="#4、完整性约束包括哪些？" class="headerlink" title="4、完整性约束包括哪些？"></a>4、完整性约束包括哪些？</h1><h6 id="数据完整性是指数据的精确和可靠性"><a href="#数据完整性是指数据的精确和可靠性" class="headerlink" title="数据完整性是指数据的精确和可靠性"></a>数据完整性是指数据的精确和可靠性</h6><p><em>1、实体完整性：规定表的每一行在表中是唯一的实体</em><br><em>2、域完整性：是指表中的列必须满足某种特定的数据类型约束，其中约束又包括取值范围、精度等规定</em><br><em>3、参照完整性：是指两个表的主关键字和外关键字的数据应一致，保证了表之间的数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散</em><br><em>4、用户定义的完整性：不同的关系数据库系统根据其应用环境的不同，往往还需要一些特殊的约束条件。用户定义的完整性即是针对某个特定关系数据库的约束条件，它反映某一具体应用必须满足的语义要求</em></p><h6 id="与表有关的约束：包括列约束和表约束"><a href="#与表有关的约束：包括列约束和表约束" class="headerlink" title="与表有关的约束：包括列约束和表约束"></a>与表有关的约束：包括列约束和表约束</h6><h1 id="5、什么是事务？及其特性？"><a href="#5、什么是事务？及其特性？" class="headerlink" title="5、什么是事务？及其特性？"></a>5、什么是事务？及其特性？</h1><p><em>事务，是一系列的数据库操作，是数据库应用的基本逻辑单位</em></p><h6 id="事务特性："><a href="#事务特性：" class="headerlink" title="事务特性："></a>事务特性：</h6><p><em>1、原子性：即不可分割性，事务要么全部被执行，要么就全部不被执行</em><br><em>2、一致性或可串性：事务的执行使得数据库从一种正确状态转换成另一种正确状态</em><br><em>3、隔离性：在事务正确提交之前，不允许把该事务对数据的任何改变提供给任何其他事务</em><br><em>4、持久性：事务正确提交后，其结果将永久保存到数据库中，即使在事务提交后有了其他故障，事务的处理结果也会得到保存</em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; MySQL面试题：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PHP常见函数</title>
    <link href="http://yoursite.com/2018/12/21/PHP%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2018/12/21/PHP常见函数/</id>
    <published>2018-12-21T06:53:36.000Z</published>
    <updated>2018-12-24T07:02:50.355Z</updated>
    
    <content type="html"><![CDATA[<p><strong> PHP常见函数：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><h1 id="1、PHP处理数组的常用函数"><a href="#1、PHP处理数组的常用函数" class="headerlink" title="1、PHP处理数组的常用函数"></a>1、PHP处理数组的常用函数</h1><p><em>1、array() 创建数组</em><br><em>2、count() 返回数组中元素的数目</em><br><em>3、array_push() 将一个或多个元素插入数组的末尾</em><br><em>4、array_column() 返回输入数组中某个单一列的值</em><br><em>5、array_combine() 合并数组</em><br><em>6、array_reverse() 反转数组</em><br><em>7、array_unique()  删除数组中的重复值</em><br><em>8、in_array() 检查数组中是否存在指定的值</em></p><h1 id="2、PHP处理字符串的常用函数？（重点看函数的’参数’和’返回值’）"><a href="#2、PHP处理字符串的常用函数？（重点看函数的’参数’和’返回值’）" class="headerlink" title="2、PHP处理字符串的常用函数？（重点看函数的’参数’和’返回值’）"></a>2、PHP处理字符串的常用函数？（重点看函数的’参数’和’返回值’）</h1><p><em>1、trim() 移除字符串两侧的空白字符和其他字符</em><br><em>2、substr() 返回字符串的一部分</em><br><em>3、substr_replace() 替换字符串</em><br><em>4、substr_count() 计算子串在字符串中出现的次数</em><br><em>5、strtolower() 把字符串转换为小写字母</em><br><em>6、strtoupper() 把字符串转换为大写字母</em><br><em>7、strtr() 转换字符串中特定的字符</em><br><em>8、strrchr() 查找字符串在另一个字符串中最后一次出现</em><br><em>9、strstr() 查找字符串在另一字符串中的第一次出现（对大小写敏感）</em><br><em>10、strrev() 反转字符串</em><br><em>11、strlen() 返回字符串的长度</em><br><em>12、explode() 把字符串打散为数组</em><br><em>13、toString() 把数组转换为字符串</em><br><em>14、str_replace() 替换字符串中的一些字符（对大小写敏感）</em><br><em>15、print() 输出一个或多个字符串</em><br><em>16、is_string() 检测变量是否是字符串</em><br><em>17、strip_tags() 从一个字符串中去除HTML标签</em><br><em>18、mb_substr() 用来截中文与英文的函数</em></p><h1 id="3、PHP处理时间的常用函数"><a href="#3、PHP处理时间的常用函数" class="headerlink" title="3、PHP处理时间的常用函数"></a>3、PHP处理时间的常用函数</h1><p><em>1、date_default_timezone_get() 返回默认时区</em><br><em>2、date_default_timezone_set() 设置默认时区</em><br><em>3、date() 格式化本地时间/日期</em><br><em>4、getdate() 返回日期/时间信息</em><br><em>5、gettimeofday() 返回当前时间信息</em><br><em>6、microtime() 返回当前时间的微秒数</em><br><em>7、mktime() 返回一个日期的 Unix时间戳</em><br><em>8、strtotime() 将任何英文文本的日期或时间描述解析为Unix时间戳</em><br><em>9、time() 返回当前时间的时间戳</em></p><h1 id="4、PHP处理数据库的常用函数"><a href="#4、PHP处理数据库的常用函数" class="headerlink" title="4、PHP处理数据库的常用函数"></a>4、PHP处理数据库的常用函数</h1><p><em>1、mysql_affected_rows() 取的前一次MySQL操作所影响的记录行数</em><br><em>2、mysql_change_user() 不赞成。改变活动连接中登录的用户</em><br><em>3、mysql_client_encoding() 返回当前连接的字符集的名称</em><br><em>4、mysql_close() 关闭非持久的MySQL连接</em><br><em>5、mysql_connect() 打开非持久的MySQL连接</em><br><em>6、mysql_create_db() 不赞成。新建MySQL数据库，使用mysql_query()代替</em><br><em>7、mysql_data_seek() 移动记录指针</em><br><em>8、mysql_db_name() 从对mysql_list_dbs() 的调用返回数据库名称</em><br><em>详细的看 <a href="http://www.w3school.com.cn/php/php_ref_mysql.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/php_ref_mysql.asp</a></em> </p><h1 id="5、PHP操作文件和目录（杂）的常用函数"><a href="#5、PHP操作文件和目录（杂）的常用函数" class="headerlink" title="5、PHP操作文件和目录（杂）的常用函数"></a>5、PHP操作文件和目录（杂）的常用函数</h1><p><em>1、basename() 返回路径中的文件名</em><br><em>2、dirname() 返回路径中的目录部分</em><br><em>3、pathinfo() 返回文件路径的信息</em><br><em>4、fopen() 打开文件或者URL</em><br><em>5、fstat() 通过已打开的文件指针取得文件信息</em><br><em>6、filesize() 取得文件大小</em><br><em>7、disk_free_space() 返回目录中的可用空间</em><br><em>8、fileatime() 取得文件的上传访问时间</em><br><em>9、file() 把整个文件读入一个数组中</em><br><em>10、fgets() 从文件指针中读取一行</em><br><em>11、feof() 测试文件指针是否到了文件结束的位置</em><br><em>12、fclose() 关闭一个已打开的文件指针</em><br><em>13、fgetss() 从文件指针中读取一行并过滤掉HTML标记</em><br><em>14、file_exists() 检查文件或者目录是否存在</em><br><em>15、file_put_contents() 将一个字符串写入文件</em></p><h1 id="6、PHP操作文件"><a href="#6、PHP操作文件" class="headerlink" title="6、PHP操作文件"></a>6、PHP操作文件</h1><p><em>1、readfile() 函数读取文件，并把它写入输出缓冲</em><br><em>2、fopen() 打开文件</em></p><li>r:      打开文件为只读</li><br><li>w:      打开文件为只写。删除文件的内容或创建一个新的文件，如果它不存在（覆盖给特定）</li><br><li>a:      打开文件只为写。文件中的现有数据会保留。文件指针在文件结尾开始。如果文件不存在，创建新的文件</li><br><li>x:      创建新文件只写。如果文件已存在，返回FALSE和错误</li><br><li>r+:     打开文件为读/写、文件指针在文件开头开始</li><br><li>w+:     打开文件为读/写。如果它不存在，删除文件内容或创建新文件</li><br><li>a+:     打开文件为读/写。文件中已有的数据会被保留。如果文件不存在，创建新文件</li><br><li>x+:     创建新文件读/写。如果文件已存在，返回FALSE和错误</li><p><em>3、fread()     读取文件</em><br><em>4、fclose()    关闭文件</em><br><em>5、fgets()     读取单行文件</em><br><em>6、feof()      检查是否已到达文件末尾</em><br><em>7、fgetc()     从文件中读取单个字符</em><br><em>8、fwrite()    写入文件</em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; PHP常见函数：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="goodgoodstudy daydayup" scheme="http://yoursite.com/tags/goodgoodstudy-daydayup/"/>
    
  </entry>
  
  <entry>
    <title>PHP经典面试题</title>
    <link href="http://yoursite.com/2018/12/19/PHP%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2018/12/19/PHP经典面试题/</id>
    <published>2018-12-19T08:28:02.000Z</published>
    <updated>2018-12-24T12:49:52.880Z</updated>
    
    <content type="html"><![CDATA[<p><strong> PHP经典面试题：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><h1 id="1、php语言的第一大优势是跨平台，什么是跨平台？"><a href="#1、php语言的第一大优势是跨平台，什么是跨平台？" class="headerlink" title="1、php语言的第一大优势是跨平台，什么是跨平台？"></a>1、php语言的第一大优势是跨平台，什么是跨平台？</h1><p><em>PHP的运行环境最优搭配为Apache+MySQL+PHP，此运行环境可以在不同操作系统（例如windows、Linux等）上配置，不受操作系统的限制，所以叫跨平台</em></p><h1 id="2、WEB开发中数据提交方式有几种？有什么区别？百度使用哪种方式？"><a href="#2、WEB开发中数据提交方式有几种？有什么区别？百度使用哪种方式？" class="headerlink" title="2、WEB开发中数据提交方式有几种？有什么区别？百度使用哪种方式？"></a>2、WEB开发中数据提交方式有几种？有什么区别？百度使用哪种方式？</h1><p><em>1、Get与post两种方式</em><br><em>2、区别</em><br><em><li>Get从服务器获取数据，post向服务器传送数据</li></em><br><em><li>Get传值在url中可见，post在url中不可见</li></em><br><em><li>Get传值一般在2KB以内，post传值大小可以在php.ini中进行设置</li></em><br><em><li>get安全性非低，post安全性较高，执行效率却比Post高</li></em></p><h1 id="3、AJAX的优势是什么"><a href="#3、AJAX的优势是什么" class="headerlink" title="3、AJAX的优势是什么"></a>3、AJAX的优势是什么</h1><p><em>AJAX是异步传输技术，实现局部刷新，从而减轻服务器的压力，提高用户体验</em></p><h1 id="4、安全对一套程序来说至关重要，请说说在开发中应该注意哪些安全机制？"><a href="#4、安全对一套程序来说至关重要，请说说在开发中应该注意哪些安全机制？" class="headerlink" title="4、安全对一套程序来说至关重要，请说说在开发中应该注意哪些安全机制？"></a>4、安全对一套程序来说至关重要，请说说在开发中应该注意哪些安全机制？</h1><p><em>1、防远程提交</em><br><em>2、防SQL注入，对特殊代码进行过滤</em><br><em>3、防止注册机灌水，使用验证码</em></p><h1 id="5、在程序的开发中，如何提高程序的运行效率？"><a href="#5、在程序的开发中，如何提高程序的运行效率？" class="headerlink" title="5、在程序的开发中，如何提高程序的运行效率？"></a>5、在程序的开发中，如何提高程序的运行效率？</h1><p><em>1、优化SQL语句，查询语句中尽量不使用select </em>，用哪个字段查哪个字段；少用子查询可用表连接代替<em></em>2、数据表中创建索引<em></em>3、对程序中经常用到的数据生成缓存*</p><h1 id="6、PHP可否与其它的数据库搭配使用？"><a href="#6、PHP可否与其它的数据库搭配使用？" class="headerlink" title="6、PHP可否与其它的数据库搭配使用？"></a>6、PHP可否与其它的数据库搭配使用？</h1><p><em>PHP与MYSQL数据库是最优搭配，当然PHP也可以去其它的数据库搭配使用，例如MSSQL等，PHP中预留了操作MSSQL的函数，只要开启就可以使用</em></p><h1 id="7、现在编程中经常采取MVC三层结构，请问MVC分别指哪三层，有什么优点？"><a href="#7、现在编程中经常采取MVC三层结构，请问MVC分别指哪三层，有什么优点？" class="headerlink" title="7、现在编程中经常采取MVC三层结构，请问MVC分别指哪三层，有什么优点？"></a>7、现在编程中经常采取MVC三层结构，请问MVC分别指哪三层，有什么优点？</h1><p><em>业务模型、视图、控制器，由控制器层调用模型处理数据，然后将数据映射到视图层进行显示</em><br><em>优点：</em><br><em>1、可以实现代码的重用性，避免产生代码冗余</em><br><em>2、M和V的实现代码分离，从而使同一个程序可以使用不同的表现形式</em></p><h1 id="8、对json数据格式的理解"><a href="#8、对json数据格式的理解" class="headerlink" title="8、对json数据格式的理解"></a>8、对json数据格式的理解</h1><p><em>JSON(JavaScript Object Notation)是一种轻量级的数据交换格式，json数据格式固定，可以被多种语言用作数据的传递</em><br><em>json_decode:   把json格式的字符串转换为PHP变量</em><br><em>json_encode:   把PHP变量转换为json格式的字符串</em></p><h1 id="9、Print、echo、print-r有什么区别？"><a href="#9、Print、echo、print-r有什么区别？" class="headerlink" title="9、Print、echo、print_r有什么区别？"></a>9、Print、echo、print_r有什么区别？</h1><p><em>1、echo和print都可以作为输出，但是echo不是函数，没有返回值，print是函数有返回值</em><br><em>2、print 是打印字符串</em><br><em>3、print_r 则是打印复合类型，如数组 对象</em></p><h1 id="10、SESSION和COOKIE-的区别？"><a href="#10、SESSION和COOKIE-的区别？" class="headerlink" title="10、SESSION和COOKIE 的区别？"></a>10、SESSION和COOKIE 的区别？</h1><p><em>1、存储位置：session存储与服务器，cookie存储于浏览器</em><br><em>2、安全性：session相对于cookie更安全</em><br><em>3、session为‘会话服务’，在使用时需要开启服务，cookie不需要开启，可以直接用</em></p><h1 id="11、content-type有哪些种类？"><a href="#11、content-type有哪些种类？" class="headerlink" title="11、content-type有哪些种类？"></a>11、content-type有哪些种类？</h1><p><em>content-type：用于定义网络文件的类型和网页编码的，决定浏览器以什么形式、什么编码读取这个文件</em><br><em>种类：HTML、xml、json、text</em></p><h1 id="12、单例模式的优缺点是什么？"><a href="#12、单例模式的优缺点是什么？" class="headerlink" title="12、单例模式的优缺点是什么？"></a>12、单例模式的优缺点是什么？</h1><h6 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h6><p><em>1、在内存中只有一个实例，减少内存开支</em><br><em>2、减少系统的性能开销</em><br><em>3、避免对资源的多重占用</em><br><em>4、在系统设置全局的访问点</em></p><h6 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h6><p><em>1、没有接口，扩展性差—-想要扩展只能修改代码</em><br><em>2、如果持有Context，那么很容易引发内存泄露</em></p><h1 id="13、网站优化"><a href="#13、网站优化" class="headerlink" title="13、网站优化"></a>13、网站优化</h1><h6 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h6><p><em>1、代码优化</em></p><h6 id="数据库优化："><a href="#数据库优化：" class="headerlink" title="数据库优化："></a>数据库优化：</h6><p><em>1、表结构优化</em><br><em>2、SQL优化</em><br><em>3、冷热数据的优化</em><br><em>4、nosql</em><br><em>5、分表分库</em></p><h6 id="文件优化："><a href="#文件优化：" class="headerlink" title="文件优化："></a>文件优化：</h6><p><em>1、文件打包压缩</em><br><em>2、CDN</em><br><em>3、OSS</em></p><h6 id="服务器优化："><a href="#服务器优化：" class="headerlink" title="服务器优化："></a>服务器优化：</h6><p><em>1、负载均衡</em><br><em>2、主从复制</em></p><h1 id="什么是面向对象"><a href="#什么是面向对象" class="headerlink" title="什么是面向对象"></a>什么是面向对象</h1><p><em>面向对象是一种编程思想，可以提高代码的作用率</em></p><p>#特性：<br><em>1、封装：把客观的事务封装抽象为一个类 对可信的类或者对象可以操作它的方法与属性 对不可信的类进行隐藏使代码模块化</em><br><em>2、继承：可以继承现有类的除私有属性的所有功能，并可以在原有的功能上进行扩展</em><br><em>3、多态：一个对外接口 多个内部实现方法，同一个操作作用于不同的类的实例 产生不同的执行结果</em></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; PHP经典面试题：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="goodgoodstudy daydayup" scheme="http://yoursite.com/tags/goodgoodstudy-daydayup/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://yoursite.com/2018/12/17/git/"/>
    <id>http://yoursite.com/2018/12/17/git/</id>
    <published>2018-12-17T01:43:44.000Z</published>
    <updated>2018-12-20T03:56:12.069Z</updated>
    
    <content type="html"><![CDATA[<p><strong> git：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><h3 id="1、首先在GitHub官网上创建账号"><a href="#1、首先在GitHub官网上创建账号" class="headerlink" title="1、首先在GitHub官网上创建账号"></a>1、首先在GitHub官网上创建账号</h3><p><img src="img/git/注册.png" alt="blockchain" title="区块链"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; git：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="吃喝玩乐" scheme="http://yoursite.com/tags/%E5%90%83%E5%96%9D%E7%8E%A9%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>自我介绍</title>
    <link href="http://yoursite.com/2018/11/22/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2018/11/22/自我介绍/</id>
    <published>2018-11-22T00:34:36.000Z</published>
    <updated>2018-12-20T03:55:57.050Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 自我介绍：</strong> <excerpt in="" index="" |="" 首页摘要=""></excerpt></p><a id="more"></a><p><strong><em>本人性格热情开朗，待人友好，为人诚实谦虚。工作勤奋，认真负责，能吃苦耐劳，尽职尽责，有耐心。具有亲和力，平易近人，善于与人沟通。</em></strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 自我介绍：&lt;/strong&gt; &lt;excerpt in=&quot;&quot; index=&quot;&quot; |=&quot;&quot; 首页摘要=&quot;&quot;&gt;&lt;/excerpt&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="吃喝玩乐" scheme="http://yoursite.com/tags/%E5%90%83%E5%96%9D%E7%8E%A9%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/11/20/hello-world/"/>
    <id>http://yoursite.com/2018/11/20/hello-world/</id>
    <published>2018-11-20T13:18:03.507Z</published>
    <updated>2018-11-20T13:18:03.507Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
